# Copyright (C) 2024 Alexandre Nicolaie (xunleii@users.noreply.github.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------
---
name: 🦀 Lint Rust source code

on:
  workflow_call:
  workflow_dispatch:

permissions: {}

jobs:
  rustfmt:
    name: 🎨 Rustfmt
    runs-on: ubuntu-latest
    steps:
      - run: rustup --version
      - name: ⬇️ Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
      - name: 🧐 Check if all files are formatted
        run: cargo fmt --all --check

  clippy:
    name: 🧹 Clippy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - run: rustup --version
      - name: 📦 Install reviewdog
        uses: reviewdog/action-setup@3f401fe1d58fe77e10d665ab713057375e39b887 # v1.3.0
        with:
          reviewdog_version: latest
      - name: 🚧 Setup cache for Rust
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        id: restore-rust
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      - name: 📦 Install clippy-reviewdog filter
        run: cargo install clippy-reviewdog-filter || true
      - name: ⬇️ Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
      - name: 🧐 Check for clippy warnings
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo clippy --all-targets --all-features --message-format json 2>&1 -- --deny missing_docs --deny unused_qualifications --deny warnings \
            | clippy-reviewdog-filter \
            | reviewdog -f=checkstyle -name=clippy -reporter=github-pr-check -filter-mode=nofilter -fail-on-error

  audit:
    name: 🛡️ Audit
    runs-on: ubuntu-latest
    steps:
      - run: rustup --version
      - name: ⬇️ Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
      - name: 🚧 Setup cache for Rust
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        id: restore-rust
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      - name: 📦 Install cargo-audit
        run: cargo install cargo-audit || true
      - name: 📦 Generate lockfile
        run: cargo generate-lockfile
      - name: 🧐 Check for security vulnerabilities
        run: cargo audit --deny warnings

  deny:
    name: 🚫 Deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
      - name: 🧐 Check for license compliance
        uses: EmbarkStudios/cargo-deny-action@10d8902cf9225c404574ce39c45d5d26c3047464 # v2.0.0
        with:
          command: check ${{ matrix.checks }}
